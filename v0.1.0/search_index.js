var documenterSearchIndex = {"docs":
[{"location":"api/#API","page":"API","title":"API","text":"","category":"section"},{"location":"api/#Modules","page":"API","title":"Modules","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"Order = [:module]","category":"page"},{"location":"api/#Types-and-constants","page":"API","title":"Types and constants","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"Order = [:type, :constant]","category":"page"},{"location":"api/#Functions-and-macros","page":"API","title":"Functions and macros","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"Order = [:macro, :function]","category":"page"},{"location":"api/#Documentation","page":"API","title":"Documentation","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"Modules = [AdaptableFunctions]\nOrder = [:module, :type, :constant, :macro, :function]","category":"page"},{"location":"api/#AdaptableFunctions.AdaptableFunctions","page":"API","title":"AdaptableFunctions.AdaptableFunctions","text":"AdaptableFunctions\n\nProvides an API for functions that can be optimized/specialized for specific input types, sizes and the computing devices the input resides on.\n\n\n\n\n\n","category":"module"},{"location":"api/#AdaptableFunctions.UnadaptedFunction","page":"API","title":"AdaptableFunctions.UnadaptedFunction","text":"struct UnadaptedFunction{F,T} <: Function\n\nAn instance FunctionNotAdaptable{F,T}() signifies that functions of type F can't be adapted to inputs of type T.\n\n(f::UnadaptedFunction).fcontains the original function, and(f::UnadaptedFunction)(args...; kwargs...)` calls the original function.\n\n\n\n\n\n","category":"type"},{"location":"api/#AdaptableFunctions.adapt_to_input-Union{Tuple{T}, Tuple{F}, Tuple{F, T}} where {F, T}","page":"API","title":"AdaptableFunctions.adapt_to_input","text":"adapt_to_input(f::F, example_input::T) where {F,T}\n\nGenerates a function that performs the same operation as f, but this is optimized/specialized for the type and size of example_input and the computing device example_input resides on.\n\nReturns the optimized/specialized version of f, or UnadaptedFunction{F,T}(f) if this is not possible.\n\n\n\n\n\n","category":"method"},{"location":"LICENSE/#LICENSE","page":"LICENSE","title":"LICENSE","text":"","category":"section"},{"location":"LICENSE/","page":"LICENSE","title":"LICENSE","text":"using Markdown\nMarkdown.parse_file(joinpath(@__DIR__, \"..\", \"..\", \"LICENSE.md\"))","category":"page"},{"location":"#AdaptableFunctions.jl","page":"Home","title":"AdaptableFunctions.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"AdaptableFunctions provides an API for functions that can be optimized/specialized for specific input types, sizes and the computing devices the input resides on.","category":"page"},{"location":"","page":"Home","title":"Home","text":"This package defines a function adapt_to_input(f, example_input) that can be specialized to generate input-optimized versions of functions for specific function and input types.","category":"page"}]
}
